version: "3.9"
services:
  mongo:
    platform: linux/x86_64 
    image: mongo:4.0
    command: --nojournal
    ports:
      - "27017:27017"
    container_name: mongo
    volumes:
      - dbdata6:/data/db

  orion:
    platform: linux/x86_64 
    image: fiware/orion-ld
    links:
      - mongo
    ports:
      - "1026:1026"
    command: -dbhost mongo -logLevel DEBUG -logForHumans
    container_name: orion
    expose:
      - "1026"
    depends_on:
      - mongo

  master-data-store:
    platform: linux/x86_64
    image: docker.ramp.eu/shop4cf/master-data-store
    environment:
      - ORION_URL=http://orion:1026
      - MONGODB_URL=mongodb://mongo:27017
      - MINIO_URL=http://minio1:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
      - API_LOCATION=http://master-data-store
    ports:
      - "80:80"
    depends_on:
      - orion
      - mongo
      - minio1
      - minio2
      - minio3
      - minio4
    restart: on-failure

  master-data-store-web:
    platform: linux/x86_64
    image: docker.ramp.eu/shop4cf/master-data-store-web
    environment:
      - REACT_APP_OPENAPI_LOCATION=http://master-data-store
      - REACT_APP_API_LOCATION=http://127.0.0.1
    ports:
      - "3011:3011"
    depends_on:
      - master-data-store
    restart: on-failure

  orion-mds-bridge:
    platform: linux/x86_64
    image: docker.ramp.eu/shop4cf/orion-mds-bridge
    environment:
      - ORION_URL=http://orion:1026
      - MDS_URL=http://master-data-store
    ports:
      - "1029:1028"
    depends_on:
      - orion
      - master-data-store
    restart: on-failure

  truckload-building-web:
    platform: linux/x86_64
    image: docker.ramp.eu/shop4cf/truckload-building-web
    environment:
      - DATABASE_URL=mongodb://mongo:27017/test
    ports:
      - "3012:3000"
    restart: on-failure

  orion-bp-bridge:
    platform: linux/x86_64
    image: docker.ramp.eu/shop4cf/orion-bp-bridge
    environment:
      - ORION_URL=http://orion:1026
      - MDS_URL=http://master-data-store
      - API_KEY=bYgjVdSKh49DXMKWESeWUaAvQDvLwVnM3L9BVmeT
      - MONGODB_URL=mongodb://mongo:27017
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=adin
      - DB_HOST=adin-db
      - MINIO_URL=http://minio1:9000
      - BUCKET_URL=http://127.0.0.1:9001/optipackimages/
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
    ports:
      - "1018:1018"
    depends_on:
      - orion
    restart: on-failure

  minio1:
    platform: linux/x86_64 
    image: minio/minio:RELEASE.2020-08-18T19-41-00Z
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    ports:
      - "9001:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    platform: linux/x86_64 
    image: minio/minio:RELEASE.2020-08-18T19-41-00Z
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    ports:
      - "9002:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    platform: linux/x86_64 
    image: minio/minio:RELEASE.2020-08-18T19-41-00Z
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    ports:
      - "9003:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    platform: linux/x86_64 
    image: minio/minio:RELEASE.2020-08-18T19-41-00Z
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    ports:
      - "9004:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  adin-db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=adin
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: on-failure


  adin-api:
    image: docker.ramp.eu/shop4cf/adin-api:5.0.0
    container_name: adin-api
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=adin
      - DB_HOST=adin-db
      - DB_PORT=5432
    ports:
      - "8000:8000"
    depends_on:
      - adin-db
    restart: on-failure


  adin-fe:
    image: docker.ramp.eu/shop4cf/adin-fe:1.4.1
    container_name: adin-fe
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - adin-api
      - adin-nh
    expose:
      - "3000"
    restart: on-failure

  adin-nh:
    image: docker.ramp.eu/shop4cf/adin-nh:1.3.0
    container_name: adin-nh
    command: bash -c "python bridge.py runserver"
    ports:
      - "54101:54100"
      - "8080:8080"
    depends_on:
      - orion
    expose:
      - "54100"
      - "8080"
    restart: on-failure


volumes:
  dbdata6:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  pgdata:
networks:
  my_network:
    driver: bridge